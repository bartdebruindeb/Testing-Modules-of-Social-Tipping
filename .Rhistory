df_mod <- ComputeModularity(df_mod, 5, "true", "true", 9, 5,3,4)
#kable(df_mod<- subset(df_mod, select = -c(adjacency_matrix)), format = "html", booktabs = TRUE)
#transform 'measurement' variable to numeric (as to avoid ggplot errors)
df_mod$Modularity <- as.numeric(df_mod$Modularity)
df_mod$Clusters <- as.numeric(df_mod$Clusters)
df_mod$Linearity <- as.numeric(df_mod$Linearity)
df_mod$Symmetry<- as.numeric(df_mod$Symmetry)
df_mod$Distortion <- as.numeric(df_mod$Distortion)
#round 'measurement' variable to 4 decimals
df_mod$Modularity <- round(df_mod$Modularity, 4)
#convert categorical variables to factors (as to avoid ggplot errors)
df_mod$run_number <- as.integer(df_mod$run_number)
df_mod$k <- as.factor(df_mod$k)
#df_mod$k <- as.factor(df_mod$k)
df_mod$BNA_Weight <- as.factor(df_mod$BNA_Weight)
#df_mod$Levels <- as.factor(df_mod$Levels)
#df_mod$Items <- as.factor(df_mod$Items)
#df_mod$seed <- as.factor(df_mod$seed)
df_mod %>%
ggplot(aes(x = time_step,
y = Modularity)) +
geom_smooth(aes(group=k, color=k),
method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Modularity") +
labs(title = "Evolution of Modularity (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 3 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight)
df_mod %>%
ggplot(aes(x = time_step,
y = Clusters)) +
geom_smooth(aes(group=k, color=k),
method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Clusters") +
labs(title = "Evolution of Clusters (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 3 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight)
df_mod %>%
ggplot(aes(x = time_step,
y = Linearity)) +
geom_smooth(aes(group=k, color=k),method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Clusters") +
labs(title = "Evolution of Clusters (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 3 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight)
df_mod %>%
ggplot(aes(x = time_step,
y = Symmetry)) +
geom_smooth(aes(group=k, color=k),method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Symmetry") +
labs(title = "Evolution of Symmetry (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 3 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight)
df_mod %>%
ggplot(aes(x = time_step,
y = Distortion)) +
geom_smooth(aes(group=k, color=k),method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Distortion") +
labs(title = "Evolution of Distortion (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 3 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight)
View(clean_df)
df_mod %>%
ggplot(aes(x = time_step,
y = Modularity)) +
geom_smooth(aes(group=k, color=k),
method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Modularity") +
labs(title = "Evolution of Modularity (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 5 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight, ncol = 2)
df_mod %>%
ggplot(aes(x = time_step,
y = Clusters)) +
geom_smooth(aes(group=k, color=k),
method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Clusters") +
labs(title = "Evolution of Clusters (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 5 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight, ncol = 2)
df_mod %>%
ggplot(aes(x = time_step,
y = Linearity)) +
geom_smooth(aes(group=k, color=k),method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Clusters") +
labs(title = "Evolution of Clusters (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 5 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight, ncol = 2)
df_mod %>%
ggplot(aes(x = time_step,
y = Symmetry)) +
geom_smooth(aes(group=k, color=k),method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Symmetry") +
labs(title = "Evolution of Symmetry (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 5 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight, ncol = 2)
df_mod %>%
ggplot(aes(x = time_step,
y = Linearity)) +
geom_smooth(aes(group=k, color=k),method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Linearity") +
labs(title = "Evolution of Linearity (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 5 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight, ncol = 2)
df_mod %>%
ggplot(aes(x = time_step,
y = IC_Global)) +
geom_smooth(aes(group=k, color=k),method="loess", formula = 'y ~ x', size=1.4, span = 0.2, se=F, fullrange=FALSE, level=0.95) +
xlab("Timesteps") +
ylab("Internal Coherence") +
labs(title = "Evolution of Distortion (Leiden_algorithm , rp == 0.4)",
subtitle = "Responses == 9, Items == 5, reps == 5 ")+
scale_color_viridis_d()+
theme_bw()+
theme(strip.background = element_rect(fill="black"),
strip.text = element_text(size=12, colour="white", face = "bold"),
plot.title = element_text( size = 18),
plot.subtitle = element_text( size = 15),
axis.title = element_text( size = 18) ) +
facet_wrap(~BNA_Weight)
#load relevant libraries
#load packages
rm(list=ls())
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load
updateR()
if(!require("pacman")) install.packages('pacman')
pacman::p_load(NetworkToolbox,
# graph,
leidenAlg,
ggthemes,
knitr ,
ResIN,
data.table,
igraph,
qgraph,
tidyverse,
dplyr,
ggplot2,
naniar,
gdata,
doParallel,
wCorr,
qgraph,
MASS,
Matrix,
matrixcalc,
randcorr,
rWishart,
ggpubr,
ggdark )
#load relevant libraries
#load packages
rm(list=ls())
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load
updateR()
if(!require("pacman")) install.packages('pacman')
pacman::p_load(NetworkToolbox,
# graph,
leidenAlg,
ggthemes,
knitr ,
ResIN,
data.table,
igraph,
qgraph,
tidyverse,
dplyr,
ggplot2,
naniar,
gdata,
doParallel,
wCorr,
qgraph,
MASS,
Matrix,
matrixcalc,
randcorr,
rWishart,
ggpubr,
ggdark )
#load relevant libraries
#load packages
rm(list=ls())
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load
updateR()
#load relevant libraries
#load packages
rm(list=ls())
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load
updateR()
if(!require("pacman")) install.packages('pacman')
pacman::p_load(NetworkToolbox,
# graph,
leidenAlg,
ggthemes,
knitr ,
ResIN,
data.table,
igraph,
qgraph,
tidyverse,
dplyr,
ggplot2,
naniar,
gdata,
doParallel,
wCorr,
qgraph,
MASS,
Matrix,
matrixcalc,
randcorr,
rWishart,
ggpubr,
ggdark )
#load relevant libraries
#load packages
rm(list=ls())
#if(!require(installr)) {
#  install.packages("installr");
#  require(installr)
#} #load
#updateR()
if(!require("pacman")) install.packages('pacman')
pacman::p_load(NetworkToolbox,
# graph,
leidenAlg,
ggthemes,
knitr ,
ResIN,
data.table,
igraph,
qgraph,
tidyverse,
dplyr,
ggplot2,
naniar,
gdata,
doParallel,
wCorr,
qgraph,
MASS,
Matrix,
matrixcalc,
randcorr,
rWishart,
ggpubr,
ggdark )
#load relevant libraries
#load packages
rm(list=ls())
#if(!require(installr)) {
#  install.packages("installr");
#  require(installr)
#} #load
#updateR()
if(!require("pacman")) install.packages('pacman')
pacman::p_load(NetworkToolbox,
# graph,
leidenAlg,
ggthemes,
knitr ,
ResIN,
data.table,
igraph,
qgraph,
tidyverse,
dplyr,
ggplot2,
naniar,
gdata,
doParallel,
wCorr,
qgraph,
MASS,
Matrix,
matrixcalc,
randcorr,
rWishart,
ggpubr,
ggdark )
#load relevant libraries
#load packages
rm(list=ls())
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load
updateR()
if(!require("pacman")) install.packages('pacman')
pacman::p_load(NetworkToolbox,
# graph,
leidenAlg,
ggthemes,
knitr ,
ResIN,
data.table,
igraph,
qgraph,
tidyverse,
dplyr,
ggplot2,
naniar,
gdata,
doParallel,
wCorr,
qgraph,
MASS,
Matrix,
matrixcalc,
randcorr,
rWishart,
ggpubr,
ggdark )
#load relevant libraries
#load packages
rm(list=ls())
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load
#updateR()
if(!require("pacman")) install.packages('pacman')
pacman::p_load(NetworkToolbox,
# graph,
leidenAlg,
ggthemes,
knitr ,
data.table,
igraph,
qgraph,
tidyverse,
dplyr,
ggplot2,
naniar,
gdata,
doParallel,
wCorr,
qgraph,
MASS,
Matrix,
matrixcalc,
randcorr,
rWishart,
devtools,
ggpubr,
ggdark )
### MANUAL INPUT: specify and set working directory ###
workdirec <-"C:/Users/20225262/OneDrive - TU Eindhoven/Documents/GitHub/Testing-Modules-of-Social-Tipping"
setwd(workdirec)
source("functions_behaviorspace_table_output_handling.R")
### MANUAL INPUT: Optionally specify filepath (i.e. where the behaviorspace csv is situated) ###
#NOTE: if csv files are placed in the workdirec, then leave filesPath unchanged
filesPath <- ""
### MANUAL INPUT: specify filenames ###
filesNames <- c("C:/Users/20225262/OneDrive - TU Eindhoven/Documents/Models/Social Tipping Modules/TEMST Clean Experiment 2-table.csv")
# READ DATA ---------------------------------------------------------------
df <- loadData(filesPath, filesNames)
# REMOVE IRRELEVANT VARIABLES ---------------------------------------------------------------
df <- removeVariables(df)
# RENAME VARIABLES ---------------------------------------------------------------
printColumnNames(df)
### MANUAL INPUT: specify new (easy-to-work-with) variable names ###
new_variable_names <- list(
"Run_Number",
"Dekkers_Power",
"Average_Node_Degree",
# "Social_Entrepeneurs",
#  "Population_Size",
"Tipping_Strategy",
"Rewiring_Proportion",
"Clustering_Coefficient",
"Communities",
"N_Green",
"Global_CC",
"Modularity",
)
#load relevant libraries
#load packages
rm(list=ls())
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load
#updateR()
if(!require("pacman")) install.packages('pacman')
pacman::p_load(NetworkToolbox,
# graph,
leidenAlg,
ggthemes,
knitr ,
data.table,
igraph,
qgraph,
tidyverse,
dplyr,
ggplot2,
naniar,
gdata,
doParallel,
wCorr,
qgraph,
MASS,
Matrix,
matrixcalc,
randcorr,
rWishart,
devtools,
ggpubr,
ggdark )
### MANUAL INPUT: specify and set working directory ###
workdirec <-"C:/Users/20225262/OneDrive - TU Eindhoven/Documents/GitHub/Testing-Modules-of-Social-Tipping"
setwd(workdirec)
source("functions_behaviorspace_table_output_handling.R")
### MANUAL INPUT: Optionally specify filepath (i.e. where the behaviorspace csv is situated) ###
#NOTE: if csv files are placed in the workdirec, then leave filesPath unchanged
filesPath <- ""
### MANUAL INPUT: specify filenames ###
filesNames <- c("C:/Users/20225262/OneDrive - TU Eindhoven/Documents/Models/Social Tipping Modules/TEMST Clean Experiment 2-table.csv")
# READ DATA ---------------------------------------------------------------
df <- loadData(filesPath, filesNames)
